<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>jQuery学习笔记1</title>
    <url>/jquery-learning-notes-1/</url>
    <content><![CDATA[<link rel="stylesheet" href="/css/demobox.css" />
<h1>jQuery基本使用</h1>
<h2 id="jQuery顶级对象">jQuery顶级对象$</h2>
<p>$是JQuery的别称</p>
<span id="more"></span>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">$(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">&#125;)</span><br><span class="line"><span class="title function_">jQuery</span>(<span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">&#125;) <span class="comment">//效果相同</span></span><br></pre></td></tr></table></figure>
<h2 id="jQuery对象获取">jQuery对象获取</h2>
<p>本质为JQuery对DOM对象包装后的对象（伪数组）</p>
<p>且JQuery对象只能使用JQuery方法，不能使用原生DOM方法</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> jq = $(<span class="string">&#x27;div&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h3 id="DOM对象转换为JQuery对象">DOM对象转换为JQuery对象</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> dom = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">$(dom); </span><br></pre></td></tr></table></figure>
<h3 id="jQuery对象转换DOM对象">jQuery对象转换DOM对象</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> jq = $(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> dom = jq[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">var</span> dom = jq.<span class="title function_">get</span>(<span class="number">0</span>);</span><br></pre></td></tr></table></figure>
<h1>jQuery常用API</h1>
<h2 id="jQuery基础选择器">jQuery基础选择器</h2>
<p><code>$(&quot;选择器&quot;)</code></p>
<table>
<thead>
<tr>
<th>名称</th>
<th>用法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>ID选择器</td>
<td>$(‘#id’)</td>
<td>获取指定id元素</td>
</tr>
<tr>
<td>全选选择器</td>
<td>$(‘*’)</td>
<td>所有元素</td>
</tr>
<tr>
<td>类选择器</td>
<td>$(‘.class’)</td>
<td>获取同一类class元素</td>
</tr>
<tr>
<td>标签选择器</td>
<td>$(‘div’)</td>
<td>获取同一标签元素</td>
</tr>
<tr>
<td>并集选择器</td>
<td>$(‘div,p,li’)</td>
<td>获取多个元素</td>
</tr>
<tr>
<td>交集选择器</td>
<td>$(‘<a href="http://div.li">div.li</a>’)</td>
<td>获取交集元素</td>
</tr>
</tbody>
</table>
<h2 id="隐藏与显示对象">隐藏与显示对象</h2>
<p><code>.show()</code>显示；<code>.hide()</code>隐藏。</p>
<h2 id="jQuery隐式迭代">jQuery隐式迭代</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    $(<span class="string">&#x27;div&#x27;</span>).<span class="title function_">css</span>(<span class="string">&#x27;background&#x27;</span>,<span class="string">&#x27;blue&#x27;</span>);</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>会将所有div都变为蓝色</p>

    <div class="demobox">
      <div class="demobox-result">
    <div class="demo">1</div>
    <div class="demo">2</div>
    <div class="demo">3</div>
    <div class="demo">4</div>
<script>(function(){
    $('.demo').css('background-image','linear-gradient(to top, #a18cd1 0%, #fbc2eb 100%)');
})();</script><style>
    .demo{
        width: 40px;
        height: 20px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">&#x9690;&#x5F0F;&#x8FED;&#x4EE3;</div><div class="demobox-intro"><p>jQuery&#x9690;&#x5F0F;&#x8FED;&#x4EE3;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line">$(<span class="string">&apos;.demo&apos;</span>).css(<span class="string">&apos;background-image&apos;</span>,<span class="string">&apos;linear-gradient(to top, #a18cd1 0%, #fbc2eb 100%)&apos;</span>);</span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">40px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">20px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<h2 id="jQuery筛选选择器">jQuery筛选选择器</h2>
<table>
<thead>
<tr>
<th>语法</th>
<th>用法</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>:first</td>
<td>$(‘li:first’)</td>
<td>获取第一个li</td>
</tr>
<tr>
<td>:last</td>
<td>$(‘li:last’)</td>
<td>获取最后一个li</td>
</tr>
<tr>
<td>:eq(index)</td>
<td>$(‘li:eq(2)’)</td>
<td>获取到索引为2的li元素（从0开始）</td>
</tr>
<tr>
<td>:odd</td>
<td>$(‘li:odd’)</td>
<td>获取到索引为奇数的li元素</td>
</tr>
<tr>
<td>:even</td>
<td>$(‘li:even’)</td>
<td>获取到索引为偶数的li元素</td>
</tr>
</tbody>
</table>
<h2 id="jQuery选择器">jQuery选择器</h2>
<p><img data-src="https://qiniu.itechfans.com/blogImage/image-20220628124314257.png?imageView2/0/q/75%7Cwatermark/2/text/aXRlY2hmYW5zLmNvbQ==/font/5a6L5L2T/fontsize/500/fill/IzgwODA4MA==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt="image-20220628124314257"></p>
<blockquote>
<p>图片来源： <a href="https://www.bilibili.com/video/BV1Sy4y1C7ha">https://www.bilibili.com/video/BV1Sy4y1C7ha</a></p>
</blockquote>
<!-- source-text -->
]]></content>
      <categories>
        <category>web前端-js</category>
      </categories>
      <tags>
        <tag>jQuery</tag>
        <tag>学习</tag>
        <tag>前端</tag>
      </tags>
  </entry>
  <entry>
    <title>Less学习笔记</title>
    <url>/less-learning-notes/</url>
    <content><![CDATA[<h1>Less使用方法与介绍</h1>
<h2 id="Less介绍">Less介绍</h2>
<span id="more"></span>
<blockquote>
<p>Less 是一门 CSS 预处理语言，它扩充了 CSS 语言，增加了诸如变量、混合（mixin）、函数等功能，让 CSS 更易维护、方便制作主题、扩充。</p>
</blockquote>
<p>Less并没有减少CSS的功能，而是在现有的CSS语法上为CSS加入了程序设计语言的特性。</p>
<h2 id="Less的安装">Less的安装</h2>
<p>通过 <a href="https://www.npmjs.org/">npm</a> 安装</p>
<p><code>npm i less -g</code></p>
<h2 id="Less的基础使用">Less的基础使用</h2>
<p>创建以.less为后缀名的文件，文件内书写less语句。</p>
<h3 id="Less变量">Less变量</h3>
<p><code>@variableName: value</code></p>
<h4 id="Less变量命名规范">Less变量命名规范</h4>
<ul class="lvl-0">
<li class="lvl-2">
<p>必须由@为前缀</p>
</li>
<li class="lvl-2">
<p>不能包含特殊字符</p>
</li>
<li class="lvl-2">
<p>不能以数字开头</p>
</li>
<li class="lvl-2">
<p>大小写敏感</p>
<p>eg.</p>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@color:</span> blue;</span><br><span class="line"><span class="variable">@imgurl:</span> <span class="string">&quot;../img&quot;</span>;</span><br><span class="line"><span class="variable">@border:</span> <span class="number">1px</span>;</span><br><span class="line"><span class="variable">@background:</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: red;</span><br><span class="line">    weight: 100px;</span><br><span class="line">    <span class="attribute">border</span>: <span class="variable">@border</span> solid red;</span><br><span class="line">    &#125;</span><br><span class="line">body&#123;</span><br><span class="line">    <span class="variable">@background</span>();</span><br><span class="line">    backgroud-<span class="attribute">color</span>: <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line">div&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Less编译">Less编译</h3>
<h4 id="通过命令行">通过命令行</h4>
<p>语法：<code>lessc --选项 源文件地址 目标文件名</code></p>
<p>eg. <code>lessc bootstrap.less bootstrap.css</code></p>
<h4 id="通过VScode插件">通过VScode插件</h4>
<p>下载 <em>Easy LESS</em> 插件将less文件编译为css，每次保存后会自动生成css文件。</p>
<h3 id="Less嵌套">Less嵌套</h3>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.classname</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="selector-class">.divclass</span>&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: yellow;</span><br><span class="line">        <span class="selector-class">.imgname</span>&#123;</span><br><span class="line">            <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Less伪类选择器">Less伪类选择器</h3>
<p>注意点：当遇见（交集、伪类、伪类选择器）</p>
<ul class="lvl-2">
<li class="lvl-4">
<p>内层选择器前若没有&amp;符号，则被解析为父选择器后代。</p>
</li>
<li class="lvl-4">
<p>若有&amp;符号，则被解析为父元素自身或父元素伪类。</p>
</li>
<li class="lvl-4">
<p>&amp;符表示本元素的父元素。</p>
</li>
</ul>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="selector-tag">&amp;</span><span class="selector-pseudo">:hover</span>&#123;</span><br><span class="line">        <span class="attribute">color</span>: blue;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Less的高级使用">Less的高级使用</h2>
<h3 id="Less运算">Less运算</h3>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="variable">@border:</span> <span class="number">5px</span>;</span><br><span class="line"><span class="selector-tag">div</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>: (<span class="number">120px</span> - <span class="number">100</span>);</span><br><span class="line">    <span class="attribute">border</span>: <span class="variable">@border</span>+<span class="number">5</span> solid black;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#666</span> - <span class="number">#333</span>;</span><br><span class="line">&#125; <span class="comment">//最好使用括号</span></span><br></pre></td></tr></table></figure>
<ul class="lvl-2">
<li class="lvl-4">
<p>运算符两侧必须敲一个空格隔开。</p>
</li>
<li class="lvl-4">
<p>两数参与运算，且只有一个有单位，则结果以该单位为准。</p>
</li>
<li class="lvl-4">
<p>两数参与运算，且都有单位，则以第一个单位为准。</p>
</li>
</ul>
<h3 id="无参方法与默认参数方法">无参方法与默认参数方法</h3>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.method1</span>()&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> gray;</span><br><span class="line">&#125; <span class="comment">//无参方法</span></span><br><span class="line"><span class="selector-class">.method2</span>(<span class="variable">@a</span>:<span class="number">1px</span>,<span class="variable">@b</span>:<span class="number">2px</span>,<span class="variable">@c</span>:<span class="number">3px</span>,<span class="variable">@color</span>:<span class="number">#123123</span>)&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="variable">@a</span> solid <span class="variable">@color</span>;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="variable">@arguments</span>; <span class="comment">//arguments代表全部参数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main1</span>&#123;</span><br><span class="line">    <span class="selector-class">.method1</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main2</span>&#123;</span><br><span class="line">    <span class="selector-class">.method2</span>();</span><br><span class="line">&#125; <span class="comment">//两种方法均被调用才能生效</span></span><br></pre></td></tr></table></figure>
<h3 id="不定参数">不定参数</h3>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.boxShadow</span>(...)&#123;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="variable">@arguments</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-class">.boxShadow</span>(<span class="number">1px</span>,<span class="number">2px</span>,<span class="number">3px</span>,red);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="方法的匹配模式">方法的匹配模式</h3>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.method</span>(top,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#666</span>)&#123;</span><br><span class="line">    <span class="attribute">border-top</span>: <span class="variable">@width</span> solid <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.method</span>(right,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#666</span>)&#123;</span><br><span class="line">    <span class="attribute">border-right</span>: <span class="variable">@width</span> solid <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.method</span>(bottom,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#666</span>)&#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="variable">@width</span> solid <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.method</span>(left,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#666</span>)&#123;</span><br><span class="line">    <span class="attribute">border-left</span>: <span class="variable">@width</span> solid <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.method</span>(<span class="variable">@_</span>,<span class="variable">@width</span>:<span class="number">20px</span>,<span class="variable">@color</span>:<span class="number">#666</span>)&#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="variable">@width</span> solid <span class="variable">@color</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-class">.method</span>(bottom,<span class="number">1px</span>,<span class="number">#111</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>相当于方法的重载</p>
<h3 id="方法的命名空间">方法的命名空间</h3>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#method</span>()&#123;</span><br><span class="line">    <span class="attribute">background</span>: red;</span><br><span class="line">    <span class="selector-class">.d</span>(<span class="variable">@w</span>:<span class="number">300px</span>)&#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="variable">@w</span>;</span><br><span class="line">        <span class="selector-id">#a</span>(<span class="variable">@h</span>:<span class="number">300px</span>)&#123;</span><br><span class="line">            <span class="attribute">height</span>: <span class="variable">@h</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-id">#method</span> &gt; <span class="selector-class">.d</span> &gt;<span class="selector-id">#a</span>(<span class="number">100px</span>);</span><br><span class="line">    <span class="selector-id">#method</span> &gt; <span class="selector-class">.d</span>(<span class="number">100px</span>);</span><br><span class="line">    <span class="selector-id">#method</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main1</span>&#123;</span><br><span class="line">    <span class="selector-class">.d</span>(<span class="number">122px</span>); <span class="comment">//错误的使用方法，没有调用其父元素则无法调用.d</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<ul class="lvl-2">
<li class="lvl-4">
<p>在CSS中<code> &gt;</code>选择器，选择的是儿子元素，就是必须与父元素有直接联系的元素。</p>
</li>
<li class="lvl-4">
<p>在引入命令空间时，如使用<code>&gt;</code>选择器，父元素不能加括号。</p>
</li>
<li class="lvl-4">
<p>不得单独使用命名空间的方法必须先引入命名空间，才能使用其中方法。</p>
</li>
<li class="lvl-4">
<p>子方法可以使用上一层传进来的方法。</p>
</li>
</ul>
<h3 id="条件筛选">条件筛选</h3>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#divclass</span>&#123;</span><br><span class="line">    <span class="selector-class">.boxShadow</span>(<span class="variable">@a</span>,<span class="variable">@b</span>,<span class="variable">@c</span>,<span class="variable">@color</span>) <span class="keyword">when</span>(<span class="variable">@a</span>&gt;<span class="number">10px</span>) <span class="keyword">and</span>(<span class="variable">@b</span>&lt;<span class="number">20px</span>)&#123;  <span class="comment">//且方法</span></span><br><span class="line">        <span class="attribute">box-shadow</span>: <span class="variable">@arguments</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.background</span>(<span class="variable">@color</span>) <span class="keyword">when</span> <span class="keyword">not</span> (<span class="variable">@color</span>=<span class="number">#666</span>)&#123;  <span class="comment">//非方法</span></span><br><span class="line">        <span class="attribute">background</span>: <span class="variable">@color</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.font</span>(<span class="variable">@size</span>:<span class="number">20px</span>) <span class="keyword">when</span> (<span class="variable">@size</span>&gt;<span class="number">20px</span>),(<span class="variable">@size</span>&lt;<span class="number">60px</span>)&#123;  <span class="comment">//逗号为或方法</span></span><br><span class="line">        <span class="attribute">font-size</span>:<span class="variable">@size</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-id">#divclass</span>&gt;<span class="selector-class">.boxShadow</span>(<span class="number">1px</span>,<span class="number">2px</span>,<span class="number">3px</span>,<span class="number">#777</span>);</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="最高优先级">最高优先级</h3>
<figure class="highlight less"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.border</span>()&#123;</span><br><span class="line">    <span class="attribute">border</span>:<span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">box-shadow</span>: <span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> black;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-id">#main</span>&#123;</span><br><span class="line">    <span class="selector-class">.border</span>() !important;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<!-- source-text -->]]></content>
      <categories>
        <category>web前端-css</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>前端</tag>
        <tag>笔记</tag>
        <tag>css</tag>
        <tag>html</tag>
        <tag>Less</tag>
      </tags>
  </entry>
  <entry>
    <title>SpringBoot学习笔记1</title>
    <url>/springboot-learning-notes-1/</url>
    <content><![CDATA[<h2 id="Configuration注解">@Configuration注解</h2>
<ol>
<li class="lvl-3">告诉SpringBoot本文件为配置类，可用于添加组件。</li>
<li class="lvl-3">配置类本身也是组件。</li>
<li class="lvl-3">配置类中的组件无论调用多少遍，都是单实例对象。(@Configuration注解中的proxyBeanMethods默认为true，可以保证组件为单实例，为 false则会创建多实例)</li>
<li class="lvl-3">proxyBeanMethods中有full与lite模式，其中lite模式(为false时)会跳过检测实例是否已存在。</li>
</ol>
<span id="more"></span>
<h2 id="Conditional条件装配">@Conditional条件装配</h2>
<ol>
<li class="lvl-4">
<p>@ConditionalOnBean(name=“xxx”)容器中含有xxx组件时,装配该组件。</p>
</li>
<li class="lvl-4">
<p>@ConditionalOnMissingBean(name=“xxx”)容器中不含有xxx组件时,装配该组件。</p>
</li>
<li class="lvl-4">
<p>@ImportResource(“classpath:xxx.xml”)允许读取xml的配置项。</p>
</li>
</ol>
<h2 id="ConfigurationProperties配置绑定">@ConfigurationProperties配置绑定</h2>
<ol>
<li class="lvl-3">
<p>@ConfigurationProperties(prefix=“xxx”)获取前缀为xxx的配置，用在pojo。</p>
</li>
<li class="lvl-3">
<p>@EnableConfigurationProperties(xxx.class)开启组件属性配置，将xxx自动注册到容器，用在配置项中。</p>
</li>
</ol>
<h2 id="SpringBootConfiguration">@SpringBootConfiguration</h2>
<p>代表main是一个配置类</p>
<h2 id="ComponentScan包扫描">@ComponentScan包扫描</h2>
<p>可指定位置扫描包的配置</p>
<h2 id="AutoConfigurationPackge">@AutoConfigurationPackge</h2>
<ol>
<li class="lvl-3">
<p>利用Registrar为容器中导入一系列组件。</p>
</li>
<li class="lvl-3">
<p>将指定包下的所有组件导入。(MainApplications所在地)</p>
</li>
<li class="lvl-3">
<p>启动时自动配置全部加载，但得益于条件装配，不会加载所有的包。</p>
</li>
</ol>
<!-- source-text -->
]]></content>
      <categories>
        <category>web后端-springboot</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>后端</tag>
        <tag>SpringBoot</tag>
      </tags>
  </entry>
  <entry>
    <title>es6-es11笔记1</title>
    <url>/es6-es11-note-1/</url>
    <content><![CDATA[<link rel="stylesheet" href="/css/demobox.css" />
<h1>ES6语法</h1>
<h2 id="let变量声明">let变量声明</h2>
<span id="more"></span>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a;</span><br><span class="line"><span class="keyword">let</span> b,c,d,e;</span><br><span class="line"><span class="keyword">let</span> k = <span class="number">555</span>;</span><br><span class="line"><span class="keyword">let</span> t = <span class="string">&quot;init&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> y = [];</span><br></pre></td></tr></table></figure>
<h3 id="let不可重复声明">let不可重复声明</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> a=<span class="number">100</span>;</span><br><span class="line"><span class="keyword">let</span> a=<span class="number">200</span>; <span class="comment">//错误的声明</span></span><br></pre></td></tr></table></figure>
<h3 id="块级作用域">块级作用域</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> name = <span class="string">&quot;name&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(name); <span class="comment">//报错，not defined</span></span><br></pre></td></tr></table></figure>
<h3 id="没有变量提升">没有变量提升</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(tag); <span class="comment">//undefined，变量提升</span></span><br><span class="line"><span class="keyword">var</span> tag = <span class="string">&quot;name&quot;</span>;</span><br><span class="line">---------------------------;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(tag); <span class="comment">//报错</span></span><br><span class="line"><span class="keyword">let</span> tag = <span class="string">&quot;name&quot;</span>;</span><br></pre></td></tr></table></figure>
<h3 id="不影响作用域链">不影响作用域链</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="keyword">let</span> name = <span class="string">&quot;doc&quot;</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(name);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_">fn</span>();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

    <div class="demobox">
      <div class="demobox-result">
     <div class="container">
        <h2 class="page-header">&#x70B9;&#x51FB;&#x5207;&#x6362;&#x989C;&#x8272;</h2>
        <div class="demo1"></div>
        <div class="demo1"></div>
        <div class="demo1"></div>
    </div>
<script>(function(){
let items = document.getElementsByClassName('demo1');
  //遍历并绑定事件
for(let i = 0 ; i<items.length ; i++){ //要使用let i = 0
    items[i].onclick = function() {
    //修改当前元素的背景颜色
    // this.style.background = 'pink';
    items[i].style.background = 'pink';
  }
}
})();</script><style>
    .demo1 {
            width: 100px;
            height: 50px;
            border: solid 1px rgb(42, 156, 156);
            float: left;
            margin-right: 10px;
        }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">let&#x6848;&#x4F8B;</div><div class="demobox-intro"><p>&#x70B9;&#x51FB;&#x540E;&#x53D8;&#x4E3A;&#x7C89;&#x8272;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">class</span>=<span class="string">&quot;page-header&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x5207;&#x6362;&#x989C;&#x8272;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> items = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&apos;demo1&apos;</span>);</span><br><span class="line">  <span class="comment">//&#x904D;&#x5386;&#x5E76;&#x7ED1;&#x5B9A;&#x4E8B;&#x4EF6;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">let</span> i = <span class="number">0</span> ; i&lt;items.length ; i++){ <span class="comment">//&#x8981;&#x4F7F;&#x7528;let i = 0</span></span><br><span class="line">    items[i].onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>{</span><br><span class="line">    <span class="comment">//&#x4FEE;&#x6539;&#x5F53;&#x524D;&#x5143;&#x7D20;&#x7684;&#x80CC;&#x666F;&#x989C;&#x8272;</span></span><br><span class="line">    <span class="comment">// this.style.background = &apos;pink&apos;;</span></span><br><span class="line">    items[i].style.background = <span class="string">&apos;pink&apos;</span>;</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.demo1</span> {</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">        <span class="attribute">border</span>: solid <span class="number">1px</span> <span class="built_in">rgb</span>(<span class="number">42</span>, <span class="number">156</span>, <span class="number">156</span>);</span><br><span class="line">        <span class="attribute">float</span>: left;</span><br><span class="line">        <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">    }</span><br></pre></td></tr></table></figure></div></div></div>
  
<p>若使用var i=0;变量会被提升为全局变量，每次点击执行回调函数时，都会执行items[3].style.background = ‘pink’;所以会出现问题。而使用let时i会作为回调函数内的一个元素，而不会被提升为全局变量。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> i;</span><br><span class="line">i=<span class="number">3</span>;</span><br><span class="line">&#123;</span><br><span class="line">    items[i].style.background = <span class="string">&quot;pink&quot;</span>;  <span class="comment">//使用var时</span></span><br><span class="line">&#125;</span><br><span class="line">-----------------------------------------------------------</span><br><span class="line">&#123;</span><br><span class="line">    let i=<span class="number">0</span>;                            <span class="comment">//使用let时</span></span><br><span class="line">    items[i].style.background = <span class="string">&quot;pink&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    let i=<span class="number">1</span>;</span><br><span class="line">    items[i].style.background = <span class="string">&quot;pink&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">    let i=<span class="number">2</span>;</span><br><span class="line">    items[i].style.background = <span class="string">&quot;pink&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="const声明常量">const声明常量</h2>
<p><code>const NORMAL = &quot;常量&quot;;</code></p>
<ul class="lvl-0">
<li class="lvl-2">
<p>const声明必须有初始值。</p>
</li>
<li class="lvl-2">
<p>一般使用大写。</p>
</li>
<li class="lvl-2">
<p>常量值不能修改。</p>
</li>
<li class="lvl-2">
<p>块级作用域。</p>
</li>
<li class="lvl-2">
<p>对数组与对象的修改不算对常量的修改。</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> nums = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>]</span><br><span class="line">num.<span class="title function_">push</span>(<span class="number">6</span>);  <span class="comment">//正确的写法</span></span><br><span class="line">num = <span class="number">10</span>; <span class="comment">//错误的写法</span></span><br></pre></td></tr></table></figure>
<h2 id="变量解构赋值">变量解构赋值</h2>
<blockquote>
<p>ES6允许按照一定模式从数组和对象中提取值，对变量进行赋值，这被称为解构赋值。</p>
</blockquote>
<h3 id="数组的解构">数组的解构</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> nums=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>];</span><br><span class="line"><span class="keyword">let</span> [a,b,c,d]=nums;  <span class="comment">//将a,b,c,d分别赋值</span></span><br></pre></td></tr></table></figure>
<h3 id="对象的解构">对象的解构</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> people = &#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="string">&quot;zhangsan&quot;</span>;</span><br><span class="line">    <span class="attr">age</span>: <span class="number">18</span>;</span><br><span class="line">    <span class="attr">ability</span>: <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;ok&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> &#123;name,age,ability&#125; = people;  <span class="comment">//必须与对象属性名相同</span></span><br><span class="line"><span class="title function_">ability</span>();</span><br></pre></td></tr></table></figure>
<h2 id="模板字符串">模板字符串</h2>
<h3 id="声明">声明</h3>
 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">`字符串`</span>;</span><br></pre></td></tr></table></figure>
<h3 id="内容中可以直接出现换行符">内容中可以直接出现换行符</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str = <span class="string">`多</span></span><br><span class="line"><span class="string">           行</span></span><br><span class="line"><span class="string">           子</span></span><br><span class="line"><span class="string">           符</span></span><br><span class="line"><span class="string">           串`</span>;</span><br></pre></td></tr></table></figure>
<h3 id="变量拼接">变量拼接</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> str1 = <span class="string">&quot;字符串&quot;</span>;</span><br><span class="line"><span class="keyword">let</span> sout = <span class="string">`<span class="subst">$&#123;str1&#125;</span>&lt;-这是拼接进来的字符串`</span>;</span><br></pre></td></tr></table></figure>
<h2 id="简化对象写法">简化对象写法</h2>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> name = <span class="string">&quot;tname&quot;</span>,age = <span class="string">&quot;18&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> people=&#123;</span><br><span class="line">    name,  <span class="comment">//等同于name=name;</span></span><br><span class="line">    age,  <span class="comment">//age=age;</span></span><br><span class="line">    <span class="title function_">improve</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;a&quot;</span>);    <span class="comment">// 等同于 improve = function()&#123;</span></span><br><span class="line">                             <span class="comment">//                               console.log(&quot;a&quot;);</span></span><br><span class="line">                             <span class="comment">//                           &#125;</span></span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="箭头函数">箭头函数</h2>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">fn</span> = (<span class="params">a,b</span>) =&gt; &#123;</span><br><span class="line">    <span class="keyword">return</span> a+b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br></pre></td></tr></table></figure>
<h3 id="this是静态的，this始终指向-u-函数声明-u-时所在作用域下的-this-的值。">this是静态的，this始终指向**<u>函数声明</u>**时所在作用域下的 this 的值。</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getName</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> <span class="title function_">getName2</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">name</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable language_">window</span>.<span class="property">name</span>=<span class="string">&quot;name1&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> s = &#123;</span><br><span class="line">    name = <span class="string">&quot;name2&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getName</span>();   <span class="comment">//直接调用this指向window</span></span><br><span class="line"><span class="title function_">getName2</span>();   <span class="comment">// name1</span></span><br><span class="line"></span><br><span class="line">getName.<span class="title function_">call</span>(s);   <span class="comment">//name2</span></span><br><span class="line">getName2.<span class="title function_">call</span>(s);  <span class="comment">//name1</span></span><br></pre></td></tr></table></figure>
<h3 id="不能作为构造实例化对象">不能作为构造实例化对象</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">Person</span> = (<span class="params">name,age</span>) =&gt;&#123;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">name</span>=name;</span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">age</span>=age;          <span class="comment">//错误的使用方法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="不能使用arguments变量">不能使用arguments变量</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">fn</span> = (<span class="params"></span>) =&gt;&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>);    <span class="comment">//错误的使用方法</span></span><br></pre></td></tr></table></figure>
<h3 id="箭头函数的简写">箭头函数的简写</h3>
<p>i. 当形参有且只有一个时可省略小括号。</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">add</span> = (<span class="params">n</span>) =&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> n++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//简化为</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">add</span> = n =&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> n++;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<pre><code>  ii.当代码体只有一条时可省略花括号,且return也应一并省去。
</code></pre>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> <span class="title function_">p</span> = (<span class="params">n</span>) =&gt;&#123;</span><br><span class="line">    <span class="keyword">return</span> n++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//简化为</span></span><br><span class="line"><span class="keyword">let</span> <span class="title function_">p</span> = n =&gt; n++;</span><br></pre></td></tr></table></figure>
<h2 id="箭头函数实例">箭头函数实例</h2>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo2"></div>
<script>(function(){
  let de = document.getElementById('demo2');
  de.addEventListener("click", function(){        //用箭头函数的写法
            setTimeout(() => {       
                this.style.background = 'pink';
            }, 2000);
        });
//   de.addEventListener("click", function(){        //不用箭头函数的写法
//            let _this = this;  //保存 this 的值,使_this指向
//            setTimeout(function(){       
//               _this.style.background = 'pink'; //修改背景颜色 this
//            }, 2000);
//        });
})();</script><style>
#demo2 {
     width: 200px;
     height: 200px;
     background: #58a;
}
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">&#x7BAD;&#x5934;&#x51FD;&#x6570;&#x5B9E;&#x4F8B;</div><div class="demobox-intro"><p>&#x4E24;&#x79D2;&#x540E;&#x53D8;&#x4E3A;&#x7C89;&#x8272;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> de = <span class="built_in">document</span>.getElementById(<span class="string">&apos;demo2&apos;</span>);</span><br><span class="line">  de.addEventListener(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{        <span class="comment">//&#x7528;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#x7684;&#x5199;&#x6CD5;</span></span><br><span class="line">            setTimeout(<span class="function"><span class="params">()</span> =&gt;</span> {       </span><br><span class="line">                <span class="keyword">this</span>.style.background = <span class="string">&apos;pink&apos;</span>;</span><br><span class="line">            }, <span class="number">2000</span>);</span><br><span class="line">        });</span><br><span class="line"><span class="comment">//   de.addEventListener(&quot;click&quot;, function(){        //&#x4E0D;&#x7528;&#x7BAD;&#x5934;&#x51FD;&#x6570;&#x7684;&#x5199;&#x6CD5;</span></span><br><span class="line"><span class="comment">//            let _this = this;  //&#x4FDD;&#x5B58; this &#x7684;&#x503C;,&#x4F7F;_this&#x6307;&#x5411;</span></span><br><span class="line"><span class="comment">//            setTimeout(function(){       </span></span><br><span class="line"><span class="comment">//               _this.style.background = &apos;pink&apos;; //&#x4FEE;&#x6539;&#x80CC;&#x666F;&#x989C;&#x8272; this</span></span><br><span class="line"><span class="comment">//            }, 2000);</span></span><br><span class="line"><span class="comment">//        });</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo2</span> {</span><br><span class="line">     <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">     <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">     <span class="attribute">background</span>: <span class="number">#58a</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> a = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>,<span class="number">10</span>]; <span class="comment">//取其中偶数</span></span><br><span class="line"><span class="keyword">const</span> res = a.<span class="title function_">filter</span>(<span class="keyword">function</span>(<span class="params">i</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(i%<span class="number">2</span>===<span class="number">0</span>)&#123;<span class="keyword">return</span> <span class="literal">true</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;<span class="keyword">return</span> <span class="literal">false</span>;&#125;</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">//使用箭头函数</span></span><br><span class="line"><span class="keyword">const</span> res = a.<span class="title function_">filter</span>(<span class="function"><span class="params">i</span> =&gt;</span> i%<span class="number">2</span>===<span class="number">0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p>箭头函数适合做与this无关的回调，如定时器与数组方法回调。</p>
<!-- source-text -->]]></content>
      <categories>
        <category>web前端-js</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>前端</tag>
        <tag>笔记</tag>
        <tag>html</tag>
        <tag>es6</tag>
        <tag>es11</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>flex学习笔记</title>
    <url>/flex-learning-notes/</url>
    <content><![CDATA[<link rel="stylesheet" href="/css/demobox.css" />
<h1>Flex布局</h1>
<h2 id="Flex由来-2">Flex由来</h2>
<blockquote>
<p>flex布局是W3C在2009年提出的新的简便、完整、响应式的布局，目前已得到所有浏览器的支持。</p>
</blockquote>
<span id="more"></span>
<h2 id="Flex是什么-2">Flex是什么</h2>
<p>Flex是弹性布局的缩写，全称是Flexible(弹性的)Box。</p>
<h2 id="Flex布局与传统布局的区别-2">Flex布局与传统布局的区别</h2>
<h3 id="传统布局-2">传统布局</h3>
<p>优点：</p>
<ol>
<li class="lvl-3">
<p>传统布局为大多数浏览器所兼容，包括ie11以下的所有版本。</p>
</li>
</ol>
<p>缺点：</p>
<ol>
<li class="lvl-3">
<p>在移动端适配具有局限性。</p>
</li>
<li class="lvl-3">
<p>基于盒子模型，依赖 display属性 、position属性 、float属性；布局繁琐。</p>
</li>
</ol>
<h3 id="Flex布局-2">Flex布局</h3>
<p>优点：</p>
<ol>
<li class="lvl-3">
<p>操作更为简单，几行代码就能实现垂直居中，且移动端适配好。</p>
</li>
<li class="lvl-3">
<p>pc端浏览器已基本支持。缺点：</p>
</li>
<li class="lvl-3">
<p>ie11及以下版本不支持。</p>
</li>
</ol>
<h2 id="Flex布局简单应用-2">Flex布局简单应用</h2>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo1">
      <div id="demobox">test1</div>
      <div id="demobox">test2</div>
      <div id="demobox">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo1{
        width:600px;
        height: 150px;
        display: flex;
    }
    #demobox{
        width: 100px;
        height: 100px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 0 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">Flex&#x7B80;&#x5355;&#x5E94;&#x7528;</div><div class="demobox-intro"><p>Flex&#x5E03;&#x5C40;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demobox&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demobox&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demobox&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo1</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demobox</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<h2 id="Flex布局原理-2">Flex布局原理</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p>当父元素设置为flex布局后，子元素中的float、clear与vertical-align将失效。</p>
</li>
<li class="lvl-2">
<p>在flex中父元素（父盒子）被成为flex父容器，其中的元素被称为子容器（flex项目）。</p>
</li>
<li class="lvl-2">
<p>通过给<strong>父元素</strong>添加flex属性，从而控制子元素位置与排列方式。</p>
</li>
</ul>
<h2 id="Flex常见父属性-2">Flex常见父属性</h2>
<table>
<thead>
<tr>
<th>属性</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="#flex-direction">flex-direction</a></td>
<td>设置主轴方向</td>
</tr>
<tr>
<td><a href="#justify-content">justify-content</a></td>
<td>设置主轴上子元素排列方式</td>
</tr>
<tr>
<td><a href="#flex-wrap">flex-wrap</a></td>
<td>设置子元素换行</td>
</tr>
<tr>
<td><a href="#align-content">align-content</a></td>
<td>设置侧轴上子元素排列方式（多行）</td>
</tr>
<tr>
<td><a href="#align-items">align-items</a></td>
<td>设置侧轴上子元素排列方式（单行）</td>
</tr>
<tr>
<td><a href="#flex-flow">flex-flow</a></td>
<td>复合属性</td>
</tr>
</tbody>
</table>
<ul class="lvl-0">
<li class="lvl-2">
<p>默认主轴水平向右，x方向。</p>
</li>
<li class="lvl-2">
<p>默认侧轴竖直向下，y方向。</p>
<p><img data-src="https://qiniu.itechfans.com/blogImage/202206271417925.png?imageMogr2/auto-orient/thumbnail/x200/interlace/1/blur/1x0/quality/49%7Cwatermark/2/text/aXRlY2hmYW5zLmNvbQ==/font/5b6u6L2v6ZuF6buR/fontsize/280/fill/IzhFOEU4RQ==/dissolve/74/gravity/SouthEast/dx/10/dy/10" alt="坐标"></p>
</li>
</ul>
<h3 id="span-id-flex-direction-flex-direction属性展示-span-2"><span id = "flex-direction">flex-direction属性展示</span></h3>
<p>flex-direction设置主轴方向，影响后续的排列效果，默认以水平向右为主轴方向。</p>
<table>
<thead>
<tr>
<th>值</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="#direction-row">row</a></td>
<td>x轴正序排列，并设置主轴为x轴方向</td>
</tr>
<tr>
<td><a href="#direction-row-reverse">row-reverse</a></td>
<td>x轴倒序排列，并设置主轴为x轴方向</td>
</tr>
<tr>
<td><a href="#direction-column">column</a></td>
<td>y轴正序排列，并设置主轴为y轴方向</td>
</tr>
<tr>
<td><a href="#direction-column-reverse">column-reverse</a></td>
<td>y轴倒序排列，并设置主轴为y轴方向</td>
</tr>
</tbody>
</table>
<p><span id="direction-row"></span></p>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo2">
      <div id="demo2box">test1</div>
      <div id="demo2box">test2</div>
      <div id="demo2box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo2{
        width:600px;
        height: 150px;
        display: flex;
        flex-direction: row;
    }
    #demo2box{
        width: 70px;
        height: 100px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 0 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">flex-direction:</div><div class="demobox-intro"><p>flex-direction: row</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo2&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo2box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo2box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo2box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo2</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo2box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<p><span id="direction-row-reverse"></span></p>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo3">
      <div id="demo3box">test1</div>
      <div id="demo3box">test2</div>
      <div id="demo3box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo3{
        width:600px;
        height: 150px;
        display: flex;
        flex-direction: row-reverse;
    }
    #demo3box{
        width: 70px;
        height: 100px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 0 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">flex-direction:</div><div class="demobox-intro"><p>flex-direction: row-reverse</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo3&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo3box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo3box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo3box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo3</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: row-reverse;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo3box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<p><span id="direction-column"></span></p>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo4">
      <div id="demo4box">test1</div>
      <div id="demo4box">test2</div>
      <div id="demo4box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo4{
        width:600px;
        height: 150px;
        display: flex;
        flex-direction: column;
    }
    #demo4box{
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 10px 0px;
        width: 100px;
        height: 30px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">flex-direction:</div><div class="demobox-intro"><p>flex-direction: column</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo4&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo4box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo4box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo4box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo4</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo4box</span>{</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<p><span id="direction-column-reverse"></span></p>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo5">
      <div id="demo5box">test1</div>
      <div id="demo5box">test2</div>
      <div id="demo5box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo5{
        width:600px;
        height: 150px;
        display: flex;
        flex-direction: column-reverse;
    }
    #demo5box{
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 10px 0px;
        width: 100px;
        height: 30px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">flex-direction:</div><div class="demobox-intro"><p>flex-direction: column-reverse</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo5&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo5box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo5box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo5box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo5</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-direction</span>: column-reverse;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo5box</span>{</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">0px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<h3 id="span-id-justify-content-justify-content属性展示-span"><span id = "justify-content">justify-content属性展示</span></h3>
<p>设置主轴上的排列方式。</p>
<table>
<thead>
<tr>
<th>值</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td><a href="#justify-flex-start">flex-start</a></td>
<td>从左至右排列(主轴为x)或从上到下(主轴为y)</td>
</tr>
<tr>
<td><a href="#justify-flex-end">flex-end</a></td>
<td>从右至左排列(主轴为x)或从下到上(主轴为y)</td>
</tr>
<tr>
<td><a href="#justify-center">center</a></td>
<td>居中对齐</td>
</tr>
<tr>
<td><a href="#justify-space-around">space-around</a></td>
<td>平分剩余空间</td>
</tr>
<tr>
<td><a href="#justify-space-between">space-between</a></td>
<td>先两边贴边，再平分剩余空间</td>
</tr>
</tbody>
</table>
<p><span id = "justify-flex-start"></span></p>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo6">
      <div id="demo6box">test1</div>
      <div id="demo6box">test2</div>
      <div id="demo6box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo6{
        width:600px;
        height: 150px;
        display: flex;
        justify-content: flex-start;
    }
    #demo6box{
        width: 70px;
        height: 50px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 0 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">justify-content:</div><div class="demobox-intro"><p>justify-content: flex-start</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo6&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo6box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo6box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo6box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo6</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: flex-start;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo6box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<p><span id = "justify-flex-end"></span></p>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo7">
      <div id="demo7box">test1</div>
      <div id="demo7box">test2</div>
      <div id="demo7box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo7{
        width:600px;
        height: 150px;
        display: flex;
        justify-content: flex-end;
    }
    #demo7box{
        width: 70px;
        height: 50px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 0 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">justify-content:</div><div class="demobox-intro"><p>justify-content: flex-end</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo7&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo7box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo7box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo7box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo7</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: flex-end;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo7box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<p><span id = "justify-center"></span></p>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo8">
      <div id="demo8box">test1</div>
      <div id="demo8box">test2</div>
      <div id="demo8box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo8{
        width: 600px;
        height: 150px;
        display: flex;
        justify-content: center;
    }
    #demo8box{
        width: 70px;
        height: 50px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 0 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">justify-content:</div><div class="demobox-intro"><p>justify-content: center</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo8box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo8box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo8box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo8</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo8box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<p><span id = "justify-space-around"></span></p>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo9">
      <div id="demo9box">test1</div>
      <div id="demo9box">test2</div>
      <div id="demo9box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo9{
        width:600px;
        height: 150px;
        display: flex;
        justify-content: space-around;
    }
    #demo9box{
        width: 70px;
        height: 50px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 0 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">justify-content:</div><div class="demobox-intro"><p>justify-content: space-around</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo9&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo9box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo9box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo9box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo9</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-around;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo9box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<p><span id = "justify-space-between"></span></p>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo14">
      <div id="demo14box">test1</div>
      <div id="demo14box">test2</div>
      <div id="demo14box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo14{
        width:600px;
        height: 150px;
        display: flex;
        justify-content: space-between;
    }
    #demo14box{
        width: 70px;
        height: 50px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 0 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">justify-content:</div><div class="demobox-intro"><p>justify-content: space-between</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo14&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo14box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo14box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo14box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo14</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: space-between;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo14box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">70px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<h3 id="span-id-flex-wrap-flex-wrap属性展示-span-2"><span id = "flex-wrap">flex-wrap属性展示</span></h3>
<p>默认情况下，项目（子元素）都在一条线上（轴线）,flex-warp默认不换行，会直接缩小子元素宽度。</p>
<p>换行是相对于当前主轴而言</p>
<p>x为主轴时：</p>
<p><img data-src="https://qiniu.itechfans.com/blogImage/image-20220627164047792.png?imageMogr2/auto-orient/thumbnail/x200/interlace/1/blur/1x0/quality/49%7Cwatermark/2/text/aXRlY2hmYW5zLmNvbQ==/font/5b6u6L2v6ZuF6buR/fontsize/280/fill/IzhFOEU4RQ==/dissolve/74/gravity/SouthEast/dx/10/dy/10" alt="image-20220627164047792"></p>
<table>
<thead>
<tr>
<th>值</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td>nowrap</td>
<td>不换行（默认）</td>
</tr>
<tr>
<td>wrap</td>
<td>换行</td>
</tr>
</tbody>
</table>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo10">
      <div id="demo10box">test1</div>
      <div id="demo10box">test2</div>
      <div id="demo10box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo10{
        width:300px;
        height: 150px;
        display: flex;
        flex-wrap:  nowrap;
    }
    #demo10box{
        width: 120px;
        height: 30px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 5px 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">flex-wrap:</div><div class="demobox-intro"><p>flex-wrap: nowrap</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo10&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo10box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo10box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo10box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo10</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>:  nowrap;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo10box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo11">
      <div id="demo11box">test1</div>
      <div id="demo11box">test2</div>
      <div id="demo11box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo11{
        width:300px;
        height: 150px;
        display: flex;
        flex-wrap:  wrap;
    }
    #demo11box{
        width: 120px;
        height: 30px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 5px 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">flex-wrap:</div><div class="demobox-intro"><p>flex-wrap: wrap</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo11&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo11box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo11box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo11box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo11</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>:  wrap;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo11box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<h3 id="span-id-align-items-align-items（单行）属性展示-span-2"><span id = "align-items">align-items（单行）属性展示</span></h3>
<p>默认以x为主轴，y为侧轴，align-item用于设置单行侧轴的排列方式。</p>
<table>
<thead>
<tr>
<th>值</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td>flex-start</td>
<td>从上到下</td>
</tr>
<tr>
<td>flex-end</td>
<td>从下到上</td>
</tr>
<tr>
<td>center</td>
<td>垂直居中</td>
</tr>
<tr>
<td>stretch</td>
<td>拉伸（默认）</td>
</tr>
</tbody>
</table>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo12">
      <div id="demo12box">test1</div>
      <div id="demo12box">test2</div>
      <div id="demo12box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo12{
        width:300px;
        height: 150px;
        display: flex;
        justify-content: center;
        align-items: center;
    }
    #demo12box{
        width: 60px;
        height: 30px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">&#x6C34;&#x5E73;&#x5782;&#x76F4;&#x5C45;&#x4E2D;</div><div class="demobox-intro"><p>&#x6C34;&#x5E73;&#x5782;&#x76F4;&#x5C45;&#x4E2D;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo12&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo12box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo12box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo12box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo12</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo12box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<p><em>通过这两个轴，可以将元素固定到任意位置。</em></p>
<h3 id="span-id-align-content-align-content（多行）属性展示-span-2"><span id = "align-content">align-content（多行）属性展示</span></h3>
<p>设置子项在侧轴上的排列方式，用于子项出现<strong>换行</strong>的情况（多行），单行下无效果。</p>
<table>
<thead>
<tr>
<th>值</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td>flex-start</td>
<td>从侧轴头部开始排列</td>
</tr>
<tr>
<td>flex-end</td>
<td>从侧轴尾部开始排列</td>
</tr>
<tr>
<td>center</td>
<td>居中对齐</td>
</tr>
<tr>
<td>space-around</td>
<td>平分侧轴剩余空间</td>
</tr>
<tr>
<td>space-between</td>
<td>先两边贴边，再平分侧轴剩余空间</td>
</tr>
<tr>
<td>stretch</td>
<td>设置子项元素高度平方父元素高度</td>
</tr>
</tbody>
</table>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo13">
      <div id="demo13box">test1</div>
      <div id="demo13box">test2</div>
      <div id="demo13box">test3</div>
  </div>
<script>(function(){})();</script><style>
    #demo13{
        width:300px;
        height: 150px;
        display: flex;
        flex-wrap:  wrap;
        align-content: space-between;
    }
    #demo13box{
        width: 120px;
        height: 30px;
        background-image: linear-gradient(to top, #fbc2eb 0%, #a6c1ee 100%);
        margin: 5px 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">flex-wrap:</div><div class="demobox-intro"><p>flex-wrap: wrap</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo13&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo13box&quot;</span>&gt;</span>test1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo13box&quot;</span>&gt;</span>test2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo13box&quot;</span>&gt;</span>test3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-id">#demo13</span>{</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>:  wrap;</span><br><span class="line">    <span class="attribute">align-content</span>: space-between;</span><br><span class="line">}</span><br><span class="line"><span class="selector-id">#demo13box</span>{</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">linear-gradient</span>(to top, #fbc2eb <span class="number">0%</span>, #a6c1ee <span class="number">100%</span>);</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<!-- source-text -->]]></content>
      <categories>
        <category>web前端-css</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>前端</tag>
        <tag>flex</tag>
        <tag>笔记</tag>
        <tag>css</tag>
        <tag>html</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo博客搭建</title>
    <url>/hexo-blog-building/</url>
    <content><![CDATA[<p>前几天心血来潮，决定搭建一个博客来做做笔记，对比了一些博客框架，最终选择了<a href="https://hexo.io">hexo</a>。</p>
<span id="more"></span>
<h1>优点与缺点</h1>
<h2 id="优点">优点</h2>
<ol>
<li class="lvl-3">生成的是静态网页，对服务器性能要求低，可以部署到例如<a href="https://pages.github.com/">Github Pages</a>等代码托管平台上,只需要花每个月十几块买一个能运行的服务器都可以正常的使用hexo，对于想建站却又不想花高额代价买服务器的学生来说很友好。</li>
<li class="lvl-3">seo优化好，对于蜘蛛来说，静态网站加载速度快，可在单位时间内抓取更多的内容。</li>
<li class="lvl-3">不易被攻击，静态网页没有后台，黑客几乎无从下手，能让站长更专注于内容，而不是黑客攻防。</li>
<li class="lvl-3">内容方便迁移，内容完全是md文档，可以随时备份到自己电脑上，安全性高。</li>
<li class="lvl-3">好看的主题多，选择较多。（虽然没wordpress多）</li>
</ol>
<h2 id="缺点">缺点</h2>
<ol>
<li class="lvl-3">
<p>静态博客不方便后期维护。</p>
</li>
<li class="lvl-3">
<p>没有集成的评论系统，只能通过第三方插件实现评论，我个人使用的是<a href="https://github.com/posativ/isso">isso</a>。</p>
</li>
<li class="lvl-3">
<p>没有浏览统计，也是通过第三方插件完成。</p>
</li>
<li class="lvl-3">
<p>Github Pages国内速度不太行，但可用<a href="https://vercel.com/">vercel</a>来代替，国内速度不错。</p>
</li>
</ol>
<p>如果你决定使用hexo作为你的博客框架，你可以继续往下看教程。</p>
<h1>搭建教程</h1>
<h2 id="安装nodejs">安装nodejs</h2>
<ol>
<li class="lvl-3">
<p>在服务器中安装nodejs环境。我使用的环境是centos7</p>
<p>官网下载 <a href="http://nodejs.org/">nodejs</a></p>
<p><code>wget https://nodejs.org/dist/v16.15.1/node-v16.15.1-linux-x64.tar.xz</code></p>
</li>
<li class="lvl-3">
<p>解压</p>
<p><code>xz -d node-v16.15.1-linux-x64.tar.xz </code></p>
<p><code>tar -zxvf node-v16.15.1-linux-x64.tar </code></p>
</li>
<li class="lvl-3">
<p>进入文件夹<code>cd node-v16.15.1-linux-x64</code></p>
<p>可以看到bin文件夹</p>
</li>
<li class="lvl-3">
<p>直接加入环境变量<code>nano /etc/profile</code></p>
<p>在最后一行加入</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">PATH=<span class="string">&quot;<span class="variable">$PATH</span>:/root/node-v16.15.1-linux-x64/bin&quot;</span></span><br><span class="line"><span class="built_in">export</span> PATH</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>刷新一下<code>source /etc/profile</code></p>
</li>
<li class="lvl-3">
<p>执行一下<code>node -v</code></p>
<p>输出了node版本即为配置完成</p>
</li>
</ol>
<h2 id="安装nginx">安装nginx</h2>
<ol>
<li class="lvl-3">
<p>安装基础包<br>
<code>yum install -y pcre pcre-devel zlib zlib-devel openssl openssl-devel</code></p>
</li>
<li class="lvl-3">
<p>下载nginx包<br>
<code>wget http://nginx.org/download/nginx-1.23.0.tar.gz</code></p>
</li>
<li class="lvl-3">
<p>解压<br>
<code>tar -zxvf nginx-1.23.0.tar.gz</code></p>
</li>
<li class="lvl-3">
<p>切换到<code>cd nginx-1.23.0</code></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>安装完成后就可以到/usr/local/nginx的安装目录</p>
</li>
<li class="lvl-3">
<p>进入到conf目录可以看到nginx.conf里面为nginx基本配置</p>
</li>
<li class="lvl-3">
<p>html文件夹下就是访问路径了</p>
</li>
<li class="lvl-3">
<p>进到sbin文件夹内利用<code>./nginx</code>可以启动nginx服务器</p>
</li>
</ol>
<p><img data-src="https://qiniu.itechfans.com/blogImage/image-20220625000735608.png?imageView2/0/q/75%7Cwatermark/2/text/aXRlY2hmYW5zLmNvbQ==/font/5a6L5L2T/fontsize/500/fill/IzgwODA4MA==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt="Welcome to nginx"></p>
<p>访问http://ip/看到这个就说明配置完成</p>
<h2 id="安装hexo-cli">安装hexo-cli</h2>
<ol>
<li class="lvl-3">
<p>进入html文件夹内删除默认文件<code>rm -rf *</code></p>
</li>
<li class="lvl-3">
<p>执行<code>npm install hexo-cli -g</code></p>
</li>
<li class="lvl-3">
<p>初始化hexo目录<code>hexo init FILENAME</code>，FILENAME为任意名称</p>
</li>
<li class="lvl-3">
<p>进入FILENAME</p>
</li>
<li class="lvl-3">
<p>这时候的_config.yml可以根据<a href="https://hexo.bootcss.com/docs/configuration.html">hexo官网配置</a>进行修改</p>
</li>
</ol>
<h2 id="安装next主题">安装next主题</h2>
<p>在FILENAME文件夹下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>
<p>再将hexo配置文件中theme改为<code>theme: next</code>。</p>
<p>同样在next主题目录下也有一个_config.yml，具体配置见<a href="https://github.com/next-theme/hexo-theme-next">hexo-theme-next</a>。</p>
<p>修改conf里的nginx.conf，搜索root，<code>root html</code>修改为<code>root html/hexo/public</code>。</p>
<p>到sbin文件夹里执行<code>./nginx -s reload</code>重载配置。</p>
<h2 id="hexo命令">hexo命令</h2>
<table>
<thead>
<tr>
<th>命令</th>
<th>效果</th>
</tr>
</thead>
<tbody>
<tr>
<td>hexo new  &lt;title&gt;</td>
<td>新建一篇以title为名的文章。</td>
</tr>
<tr>
<td>hexo generate / hexo g</td>
<td>生成静态文件。此时会产生一个public文件夹。</td>
</tr>
<tr>
<td>hexo server</td>
<td>启动hexo服务器，默认端口4000。</td>
</tr>
<tr>
<td>hexo deploy / hexo d</td>
<td>部署网站。</td>
</tr>
</tbody>
</table>
<p>这些是基础命令，更多可以看<a href="https://hexo.bootcss.com/docs/commands.html">hexo命令</a>。</p>
<h2 id="访问测试">访问测试</h2>
<p>到FILENAME目录执行<code>hexo g</code>看到public文件夹创建后，访问http://ip/可以看到</p>
<p><img data-src="https://qiniu.itechfans.com/blogImage/image-20220625111433935.png?imageView2/0/q/75%7Cwatermark/2/text/aXRlY2hmYW5zLmNvbQ==/font/5a6L5L2T/fontsize/500/fill/IzgwODA4MA==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt="Hexo Hello World"></p>
<p>则已经部署好。</p>
<!-- source-text -->]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>教程</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>hexo教程进阶-Github Pages</title>
    <url>/advanced-hexo-tutorial-github-pages/</url>
    <content><![CDATA[<p>上次在<a href="https://itechfans.com/hexo-bo-ke-da-jian/">博客搭建</a>介绍了hexo的基本安装,再来介绍一下hexo如何部署到<a href="https://pages.github.com/">Github Pages</a>。</p>
<ol>
<li class="lvl-3">
<p>首先要在<a href="https://github.com">Github</a>上创建一个新的仓库，并且仓库名称是[Github用户名].github.io（公开仓库）。</p>
</li>
<li class="lvl-3">
<p>安装hexo插件 <a href="https://www.npmjs.com/package/hexo-deployer-git">hexo-deployer-git</a></p>
<span id="more"></span>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>
</li>
<li class="lvl-3">
<p>到hexo目录下的_config.yml文件夹内找到deploy项并修改为</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">仓库的url</span>   <span class="comment"># https://github.com/&lt;name&gt;/&lt;name&gt;.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span> <span class="comment"># 一般为master</span></span><br><span class="line">  <span class="attr">ignore_hidden:</span> <span class="literal">true</span> <span class="comment"># default is true</span></span><br></pre></td></tr></table></figure>
<p>配置一下git全局的name和email</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config –global user.name <span class="string">&quot;your_account_name&quot;</span></span><br><span class="line">git config –global user.email <span class="string">&quot;youremail@example.com&quot;</span></span><br></pre></td></tr></table></figure>
<p>不过这样设置<code>hexo d</code>时经常要输密码，可以改为ssh提交方式，不过要一些前置步骤。</p>
<ol>
<li class="lvl-6">
<p><code>ssh-keygen -t rsa -C &quot;youremail@example.com&quot;</code>将email改成github的邮箱。</p>
</li>
<li class="lvl-6">
<p>在<code>~/.ssh</code>目录下找到id_rsa.pub，打开<code>nano id_rsa.pub</code>复制全部内容。</p>
</li>
<li class="lvl-6">
<p>点击进入https://github.com/settings/keys</p>
</li>
<li class="lvl-6">
<p><img data-src="https://qiniu.itechfans.com/blogImage/image-20220625234931976.png?imageView2/0/q/75%7Cwatermark/2/text/aXRlY2hmYW5zLmNvbQ==/font/5a6L5L2T/fontsize/500/fill/IzgwODA4MA==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt="github SSH keys"></p>
<p>点击后将内容粘贴进去。</p>
<p>此时deploy可改为：</p>
</li>
</ol>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@github.com:&lt;name&gt;/&lt;name&gt;.github.io.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br><span class="line">  <span class="attr">ignore_hidden:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>保存后退出，执行<code>hexo d</code>，执行完成后可以在仓库内查看到静态网站文件。</p>
<ol start="4">
<li class="lvl-3">
<p>进入仓库settings</p>
<p><img data-src="https://qiniu.itechfans.com/blogImage/202206260003385.png?imageView2/0/q/75%7Cwatermark/2/text/aXRlY2hmYW5zLmNvbQ==/font/5a6L5L2T/fontsize/500/fill/IzgwODA4MA==/dissolve/100/gravity/SouthEast/dx/10/dy/10" alt="GithubPages setting"></p>
</li>
</ol>
<p>填写已申请好的域名，最好能勾选一下强制https  <code>Enforce HTTPS</code>,若是没有申请域名，可以直接访问https://&lt;name&gt;.github.io进入网站。</p>
<ol start="5">
<li class="lvl-3">
<p>填写好域名后，将域名ALIAS解析到<code>&lt;name&gt;.github.io</code>。</p>
</li>
<li class="lvl-3">
<p>然后就可以通过自己的域名访问网站了。</p>
</li>
</ol>
<!-- source-text -->]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>教程</tag>
        <tag>博客</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript快速学习</title>
    <url>/javascript-quick-learning/</url>
    <content><![CDATA[<link rel="stylesheet" href="/css/demobox.css" />
<h1>javascript快速学习</h1>
<h3 id="一、前提">一、前提</h3>
<blockquote>
<p>至少有一门编程语言基础</p>
</blockquote>
<span id="more"></span>
<h2 id="二、js注释">二、js注释</h2>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//这是单行注释</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">这是多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure>
<h2 id="三、js输入输出">三、js输入输出</h2>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">alert</span>(message);       <span class="comment">//浏览器弹出框</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(message); <span class="comment">//控制台输出</span></span><br><span class="line"><span class="title function_">prompt</span>(information)   <span class="comment">//浏览器弹出输入框</span></span><br></pre></td></tr></table></figure>
<ul class="lvl-0">
<li class="lvl-2">
<h3 id="例子">例子</h3>
</li>
</ul>

    <div class="demobox">
      <div class="demobox-result">
    <button id="alert">&#x70B9;&#x51FB;&#x51FA;&#x73B0;&#x63D0;&#x793A;&#x6846;</button>
    <button id="console">&#x70B9;&#x51FB;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;</button>
    <button id="prompt">&#x70B9;&#x51FB;&#x5F39;&#x51FA;&#x8F93;&#x5165;&#x6846;</button>
<script>(function(){
    $(document).ready(function(){
        $('#alert').click(function(){
            alert('这是消息提示框');
        });
        $('#console').click(function(){
            console.log("这是控制台消息");    //按F12唤出浏览器开发者工具
        });
        $("#prompt").click(function(){
            var val = prompt("随便输入点东西:");
            console.log(val);
        })
    });
})();</script><style>
    button{
        margin: 10px 10px;
    }
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">js&#x8F93;&#x5165;&#x8F93;&#x51FA;</div><div class="demobox-intro"><p>&#x70B9;&#x51FB;&#x6309;&#x94AE;&#x6709;&#x4E0D;&#x540C;&#x6548;&#x679C;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;alert&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x51FA;&#x73B0;&#x63D0;&#x793A;&#x6846;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;console&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x63A7;&#x5236;&#x53F0;&#x8F93;&#x51FA;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">id</span>=<span class="string">&quot;prompt&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x5F39;&#x51FA;&#x8F93;&#x5165;&#x6846;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line">$(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">    $(<span class="string">&apos;#alert&apos;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">        alert(<span class="string">&apos;&#x8FD9;&#x662F;&#x6D88;&#x606F;&#x63D0;&#x793A;&#x6846;&apos;</span>);</span><br><span class="line">    });</span><br><span class="line">    $(<span class="string">&apos;#console&apos;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;&#x8FD9;&#x662F;&#x63A7;&#x5236;&#x53F0;&#x6D88;&#x606F;&quot;</span>);    <span class="comment">//&#x6309;F12&#x5524;&#x51FA;&#x6D4F;&#x89C8;&#x5668;&#x5F00;&#x53D1;&#x8005;&#x5DE5;&#x5177;</span></span><br><span class="line">    });</span><br><span class="line">    $(<span class="string">&quot;#prompt&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">        <span class="keyword">var</span> val = prompt(<span class="string">&quot;&#x968F;&#x4FBF;&#x8F93;&#x5165;&#x70B9;&#x4E1C;&#x897F;:&quot;</span>);</span><br><span class="line">        <span class="built_in">console</span>.log(val);</span><br><span class="line">    })</span><br><span class="line">});</span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">button</span>{</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span> <span class="number">10px</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<h2 id="四、变量">四、变量</h2>
<ol>
<li class="lvl-3">
<h3 id="声明变量">声明变量</h3>
<ul class="lvl-2">
<li class="lvl-5"><code>var</code>是js关键字，用于声明变量。</li>
<li class="lvl-5">name为变量名，通过变量名访问值。</li>
<li class="lvl-5">变量命名遵循规则与C语言相同</li>
</ul>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> name;  <span class="comment">//声明一个name变量</span></span><br></pre></td></tr></table></figure>
<ol start="2">
<li class="lvl-3">
<h3 id="赋值">赋值</h3>
<p>​	<code>name = 18</code> 为变量赋值18.</p>
</li>
</ol>
<h2 id="五、数据类型">五、数据类型</h2>
<p>javascript是一种弱类型语言（动态语言）。不必提前声明变量类型，在程序运行中会自动确定，js引擎根据右值判断类型。</p>
<h3 id="简单数据类型">简单数据类型</h3>
<table>
<thead>
<tr>
<th>数据类型</th>
<th>说明</th>
<th>默认值</th>
</tr>
</thead>
<tbody>
<tr>
<td>Number</td>
<td>数字型</td>
<td>0</td>
</tr>
<tr>
<td>Boolean</td>
<td>布尔型</td>
<td>false</td>
</tr>
<tr>
<td>String</td>
<td>字符串型</td>
<td>“”</td>
</tr>
<tr>
<td>Undefined</td>
<td>未定义值,如<code>var a;</code>却未赋值</td>
<td>undefined</td>
</tr>
<tr>
<td>Null</td>
<td>空值</td>
<td>null</td>
</tr>
</tbody>
</table>
<h4 id="字符串"> 字符串</h4>
<ul class="lvl-0">
<li class="lvl-2">
<p>字符串嵌套：<code>str='这是一个&quot;这是嵌套的字符串&quot;字符串'</code>或<code>&quot;str=这是一个'这是嵌套的字符串'字符串&quot;</code>。</p>
</li>
<li class="lvl-2">
<p>转义字符与C语言相似。</p>
</li>
</ul>
<h4 id="数据类型转换">数据类型转换</h4>
<p>  1. 数字转字符串</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>toString()方法</td>
<td><code>var num=20;var str = num.toString()</code></td>
</tr>
<tr>
<td>String()强制转换</td>
<td><code>var num=20;var str = String(num)</code></td>
</tr>
<tr>
<td>加号拼接</td>
<td><code>var num = 20;var str = num+&quot;&quot;</code></td>
</tr>
</tbody>
</table>
<p>  2. 字符串转数字</p>
<table>
<thead>
<tr>
<th>方法</th>
<th>例</th>
</tr>
</thead>
<tbody>
<tr>
<td>parseInt(string)</td>
<td><code>parseInt('20');</code>若输入为小数字符串则取整，错误则为NaN</td>
</tr>
<tr>
<td>parseFloat(string)</td>
<td><code>parseFloat('20.21');</code></td>
</tr>
<tr>
<td>Number()强制转换</td>
<td><code>Number('88');</code></td>
</tr>
<tr>
<td>js隐式转换</td>
<td><code>'10'-0;</code></td>
</tr>
</tbody>
</table>
<p>  3.转换布尔型</p>
<ul class="lvl-0">
<li class="lvl-2">
<p>代表<strong>空</strong>或者<strong>否定</strong>的值会转换为false，如<code>''</code>,<code>0</code>,<code>NaN</code>,<code>null</code>,<code>undefined</code></p>
</li>
<li class="lvl-2">
<p>其他值均为true</p>
</li>
</ul>
<h2 id="六、运算符">六、运算符</h2>
<h3 id="前置递增运算符">前置递增运算符</h3>
<p><code>i++</code>与<code>i--</code></p>
<h3 id="后置递增运算符">后置递增运算符</h3>
<p><code>++i</code>与<code>--i</code></p>
<h3 id="比较运算符">比较运算符</h3>
<p><img data-src="https://qiniu.itechfans.com/blogImage/image-20220629152121343.png?imageMogr2/auto-orient/thumbnail/x400/interlace/1/blur/1x0/quality/49%7Cwatermark/2/text/aXRlY2hmYW5zLmNvbQ==/font/5b6u6L2v6ZuF6buR/fontsize/280/fill/IzhFOEU4RQ==/dissolve/74/gravity/SouthEast/dx/10/dy/10" alt="比较运算符"></p>
<blockquote>
<p>图片来源：<a href="https://www.bilibili.com/video/BV1Sy4y1C7ha">https://www.bilibili.com/video/BV1Sy4y1C7ha</a></p>
</blockquote>
<h3 id="逻辑运算符">逻辑运算符</h3>
<table>
<thead>
<tr>
<th>符号</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>&amp;&amp;</td>
<td>逻辑与，两边同时为true时为true。</td>
</tr>
<tr>
<td>||</td>
<td>逻辑或，两边有一方为true则为true。</td>
</tr>
<tr>
<td>!</td>
<td>条件为true时为false，条件为false时为true。</td>
</tr>
</tbody>
</table>
<h4 id="短路运算"> 短路运算</h4>
<table>
<thead>
<tr>
<th>语法</th>
<th>结果</th>
</tr>
</thead>
<tbody>
<tr>
<td>表达式1 &amp;&amp; 表达式2</td>
<td>当表达式1为假时，不在计算表达式2，直接返回假。</td>
</tr>
<tr>
<td>表达式1 || 表达式2</td>
<td>当表达式一为真时，不再计算表达式2，直接返回真。</td>
</tr>
</tbody>
</table>
<h3 id="运算符优先级">运算符优先级</h3>
<p><img data-src="https://qiniu.itechfans.com/blogImage/image-20220629154625051.png?imageMogr2/auto-orient/thumbnail/x400/interlace/1/blur/1x0/quality/49%7Cwatermark/2/text/aXRlY2hmYW5zLmNvbQ==/font/5b6u6L2v6ZuF6buR/fontsize/280/fill/IzhFOEU4RQ==/dissolve/74/gravity/SouthEast/dx/10/dy/10" alt="逻辑运算符优先级"></p>
<h2 id="七、流程控制">七、流程控制</h2>
<h3 id="（一）、if分支语句">（一）、if分支语句</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(条件表达式)&#123;</span><br><span class="line">    语句;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(条件表达式)&#123;</span><br><span class="line">    语句;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    语句;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<blockquote>
<p>三元表达式：(条件表达式) : 表达式1 ? 表达式2;</p>
</blockquote>
<h3 id="（二）、switch多分支语句">（二）、switch多分支语句</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">switch</span>(表达式)&#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="attr">value1</span>: </span><br><span class="line">        语句;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="attr">value2</span>: </span><br><span class="line">        语句;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    <span class="attr">default</span>:</span><br><span class="line">        语句; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="（三）、循环">（三）、循环</h3>
<h4 id="1-for循环">  1. for循环</h4>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span>(初始化变量;条件判断;循环一次后的操作)&#123;</span><br><span class="line">    循环体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-while循环">  2. while循环</h4>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span>(条件表达式)&#123;</span><br><span class="line">    循环体;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3-do…while-循环">  3. do…while()循环</h4>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">do</span>&#123;</span><br><span class="line">    循环体;</span><br><span class="line">&#125;<span class="keyword">while</span>(条件表达式);</span><br></pre></td></tr></table></figure>
<blockquote>
<p><code>continue</code>关键字：跳过本次循环，进入下一次循环。</p>
<p><code>break</code>关键字：跳出循环，不再执行循环。</p>
</blockquote>
<h2 id="八、数组">八、数组</h2>
<h3 id="（一）、创建方式">（一）、创建方式</h3>
<ul class="lvl-0">
<li class="lvl-2">
<p>使用new创建数组。</p>
</li>
<li class="lvl-2">
<p>利用数组字面量创建数组。</p>
</li>
</ul>
<h3 id="（二）、new创建数组">（二）、new创建数组</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">ArrayName</span> = <span class="keyword">new</span> <span class="title class_">Array</span>();</span><br></pre></td></tr></table></figure>
<h3 id="（三）、数组字面量创建数组">（三）、数组字面量创建数组</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> <span class="title class_">ArrayName</span> = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];  <span class="comment">//常用</span></span><br></pre></td></tr></table></figure>
<h2 id="九、函数">九、函数</h2>
<h3 id="（一）、函数的使用">（一）、函数的使用</h3>
<h4 id="1-声明函数">  1. 声明函数</h4>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fnName</span>(<span class="params"></span>)&#123;</span><br><span class="line">    语句;</span><br><span class="line">&#125;</span><br><span class="line">-------------------------;</span><br><span class="line"><span class="keyword">var</span> fn = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    语句;      <span class="comment">//匿名函数      </span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>();    <span class="comment">//fn为变量名，不是函数名</span></span><br></pre></td></tr></table></figure>
<h4 id="2-调用函数">  2. 调用函数</h4>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">fnName</span>();</span><br></pre></td></tr></table></figure>
<h4 id="3-函数的参数">  3. 函数的参数</h4>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fnName</span>(<span class="params">parameter1,parameter2</span>)&#123;</span><br><span class="line">    语句;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fnName</span>(<span class="number">1</span>,<span class="number">2</span>);</span><br><span class="line">--------------------;</span><br><span class="line"><span class="keyword">var</span> fn = <span class="keyword">function</span>(<span class="params"><span class="variable language_">arguments</span></span>)&#123;</span><br><span class="line">    语句;     </span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>);</span><br></pre></td></tr></table></figure>
<h4 id="4-函数的返回值">  4. 函数的返回值</h4>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">getSum</span>(<span class="params">num1,num2</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> num1+num2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">getSum</span>(<span class="number">2</span>,<span class="number">3</span>);</span><br></pre></td></tr></table></figure>
<h4 id="5-arguments的使用">  5.arguments的使用</h4>
<ul class="lvl-0">
<li class="lvl-2">
<p>不确定实参个数时，使用arguments获取所有参数</p>
</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">arguments</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>); <span class="comment">//返回arguments伪数组</span></span><br></pre></td></tr></table></figure>
<p><strong>arguments并不是真正意义上的数组</strong>：</p>
<ol>
<li class="lvl-3">
<p>具有length</p>
</li>
<li class="lvl-3">
<p>以索引进行存储</p>
</li>
<li class="lvl-3">
<p>没有pop()与push()等数组方法</p>
</li>
</ol>
<h2 id="十、作用域">十、作用域</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p>javascript作用域分为全局作用域与局部作用域</p>
</li>
</ul>
<h3 id="（一）、全局作用域">（一）、全局作用域</h3>
<ul class="lvl-0">
<li class="lvl-2">
<p>整个script标签可用,或单独的js文件可用</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">var</span> num = <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">//可在函数中使用</span></span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="（二）、局部作用域">（二）、局部作用域</h3>
<ul class="lvl-0">
<li class="lvl-2">
<p>仅在函数内部起作用</p>
</li>
</ul>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="keyword">var</span> num = <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">        <span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">//num is not defined</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>在函数内部未经声明，直接赋值的变量也是全局变量</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">        num = <span class="number">10</span>;</span></span><br><span class="line"><span class="language-javascript">    &#125;</span></span><br><span class="line"><span class="language-javascript">    <span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">// 10</span></span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="（三）、变量的销毁">（三）、变量的销毁</h3>
<ul class="lvl-0">
<li class="lvl-2">
<p>全局变量：浏览器关闭时才会销毁。</p>
</li>
<li class="lvl-2">
<p>局部变量：代码块结束后，就会被销毁。</p>
</li>
</ul>
<h3 id="（四）、作用域链">（四）、作用域链</h3>
<p>当函数中嵌套了函数，作用域链就产生了。</p>
 <figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="keyword">function</span> <span class="title function_">fn1</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="keyword">var</span> num = <span class="number">20</span>;</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">fn2</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">//20</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="十一、js运行步骤">十一、js运行步骤</h2>
<ul class="lvl-0">
<li class="lvl-2">
<p>javascript解析器在运行javascript语句时分两步：预解析和代码执行。</p>
</li>
</ul>
<h3 id="（一）、预解析">（一）、预解析</h3>
<ul class="lvl-0">
<li class="lvl-2">
<p>预解析分为<strong>变量预解析</strong>（变量提升）和<strong>函数预解析</strong>（函数提升）。</p>
</li>
<li class="lvl-2">
<p>js解析器会将所有的var与function提升到<strong>当前作用域</strong>的最前面。</p>
</li>
</ul>
<h4 id="1-变量预解析">1. 变量预解析</h4>
<p>不提升赋值操作</p>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num);</span><br><span class="line"><span class="keyword">var</span> num = <span class="number">10</span>;</span><br><span class="line"><span class="comment">//相当于以下代码</span></span><br><span class="line"><span class="keyword">var</span> num;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(num); <span class="comment">//undefined</span></span><br><span class="line">num = <span class="number">10</span>;</span><br></pre></td></tr></table></figure>
<h4 id="2-函数预解析">2. 函数预解析</h4>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="title function_">fn</span>();</span><br><span class="line"><span class="keyword">var</span> fn = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">123</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//相当于以下代码</span></span><br><span class="line"><span class="keyword">var</span> fn;</span><br><span class="line"><span class="title function_">fn</span>();</span><br><span class="line">fn = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="number">123</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="（二）、代码执行">（二）、代码执行</h3>
<ul class="lvl-0">
<li class="lvl-2">
<p>代码按照书写顺序，由上到下依次执行</p>
</li>
</ul>
<h2 id="十二、new的执行过程">十二、new的执行过程</h2>
<ol>
<li class="lvl-3">
<p>在内存中创建空对象。</p>
</li>
<li class="lvl-3">
<p>this指向空对象。</p>
</li>
<li class="lvl-3">
<p>执行构造函数，并添加属性和方法。</p>
</li>
<li class="lvl-3">
<p>返回新对象。</p>
</li>
</ol>
<h2 id="十三、js对象">十三、js对象</h2>
<h3 id="（一）、内置对象">（一）、内置对象</h3>
<blockquote>
<p>内置对象是指JS语言自带的对象，提供了一些常用的的或最基本而且必要的方法，能帮助开发者快速开发，如：Math,Date,Array,String等。</p>
</blockquote>
<p>更多内置方法详见<a href="https://developer.mozilla.org/zh-CN/">MDN</a></p>
<h4 id="Array数组的一些方法">  Array数组的一些方法</h4>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> arr = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">3</span>);    <span class="comment">//创建含有三个空元素的数组</span></span><br><span class="line"><span class="keyword">var</span> arr1 = <span class="keyword">new</span> <span class="title class_">Array</span>(<span class="number">2</span>,<span class="number">3</span>); <span class="comment">//等价于var arr1 = [2,3];</span></span><br><span class="line">-------------------------------------------;</span><br><span class="line">arr <span class="keyword">instanceof</span> <span class="title class_">Array</span>;      <span class="comment">//第一种方式判断arr是否为数组</span></span><br><span class="line"><span class="title class_">Array</span>.<span class="title function_">isArray</span>(arr);        <span class="comment">//第二种方式判断arr是否是数组，优先于instanceof</span></span><br><span class="line">-------------------------------------------;</span><br><span class="line"><span class="keyword">var</span> arr = [<span class="number">4</span>,<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>,<span class="number">9</span>];</span><br><span class="line">arr.<span class="title function_">push</span>(<span class="number">1</span>);               <span class="comment">//追加新元素在最后</span></span><br><span class="line">arr.<span class="title function_">unshift</span>(<span class="number">2</span>);            <span class="comment">//在数组最前面追加元素</span></span><br><span class="line">-------------------------------------------;</span><br><span class="line">arr.<span class="title function_">pop</span>();                 <span class="comment">//删除并返回最后一个元素</span></span><br><span class="line">arr.<span class="title function_">shift</span>();               <span class="comment">//删除并返回最前面一个函数</span></span><br><span class="line">-------------------------------------------;</span><br><span class="line">arr.<span class="title function_">reverse</span>();             <span class="comment">//反转数组</span></span><br><span class="line">arr.<span class="title function_">sort</span>();                <span class="comment">//对数组排序</span></span><br><span class="line">-------------------------------------------;</span><br><span class="line">arr.<span class="title function_">indexOf</span>(<span class="number">1</span>);            <span class="comment">//查找给定元素的第一个索引</span></span><br><span class="line">arr.<span class="title function_">lastIndexOf</span>(<span class="number">1</span>);        <span class="comment">//查找给的元素的最后一个索引</span></span><br><span class="line">-------------------------------------------;</span><br><span class="line">arr.<span class="title function_">toString</span>();            <span class="comment">//数组转化为字符串-&gt; 4,5,6,7,8,9</span></span><br><span class="line">arr.<span class="title function_">join</span>(分隔符);           <span class="comment">//不加分隔符与toString()相同，arr.join(&#x27;-&#x27;); 输出 4-5-6-7-8-9;</span></span><br><span class="line">-------------------------------------------;</span><br><span class="line">arr.<span class="title function_">concat</span>(arr1,arr2);     <span class="comment">//连接两个或多个数组,返回新数组</span></span><br><span class="line">arr.<span class="title function_">slice</span>(begin,end);      <span class="comment">//截取数组从begin到end，返回新数组(从0开始);</span></span><br><span class="line">arr.<span class="title function_">splice</span>(begin,num);     <span class="comment">//删除从begin开始的num个数，返回新数组，影响原数组</span></span><br><span class="line">arr.<span class="title function_">splice</span>(begin,num,item1...) <span class="comment">//在begin位置删除num个数并插入item</span></span><br><span class="line"><span class="comment">//eg. arr.splice(2,1,1,2,3); 输出 4,5,1,2,3,7,8,9;</span></span><br></pre></td></tr></table></figure>
<!-- source-text -->]]></content>
      <categories>
        <category>web前端-js</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>前端</tag>
        <tag>笔记</tag>
        <tag>html</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>javascript在web方面使用</title>
    <url>/javascript-is-used-in-the-web/</url>
    <content><![CDATA[<link rel="stylesheet" href="/css/demobox.css" />
<h1>javascript在web方面使用</h1>
<span id="more"></span>
<h2 id="一、获取元素">一、获取元素</h2>
<ol>
<li class="lvl-3">
<p>通过id获取</p>
</li>
<li class="lvl-3">
<p>根据标签名获取</p>
</li>
<li class="lvl-3">
<p>通过HTML5新增方式获取</p>
</li>
<li class="lvl-3">
<p>特殊元素获取</p>
</li>
</ol>
<h3 id="（一）、通过id获取">（一）、通过id获取</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> el = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;id&#x27;</span>);   <span class="comment">//找不到元素返回null</span></span><br></pre></td></tr></table></figure>

    <div class="demobox">
      <div class="demobox-result">
  <div id="demo1">&#x8FD9;&#x662F;div&#x5185;&#x7684;&#x5185;&#x5BB9;</div>
  <button class="demo1-btn">&#x70B9;&#x51FB;&#x66FF;&#x6362;&#x5185;&#x5BB9;</button>
<script>(function(){
  var el = document.getElementById('demo1');
  $(document).ready(function(){
  $(".demo1-btn").click(function(){
    el.innerHTML="替换后的内容";
  });
});
})();</script><style></style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">getElementById</div><div class="demobox-intro"><p>&#x901A;&#x8FC7;getElementById&#x83B7;&#x53D6;&#x5143;&#x7D20;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo1&quot;</span>&gt;</span>&#x8FD9;&#x662F;div&#x5185;&#x7684;&#x5185;&#x5BB9;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;demo1-btn&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x66FF;&#x6362;&#x5185;&#x5BB9;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> el = <span class="built_in">document</span>.getElementById(<span class="string">&apos;demo1&apos;</span>);</span><br><span class="line">  $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  $(<span class="string">&quot;.demo1-btn&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">    el.innerHTML=<span class="string">&quot;&#x66FF;&#x6362;&#x540E;&#x7684;&#x5185;&#x5BB9;&quot;</span>;</span><br><span class="line">  });</span><br><span class="line">});</span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div></div></div>
  
<h3 id="（二）、通过标签名获取">（二）、通过标签名获取</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> el = <span class="variable language_">document</span>.<span class="title function_">getElementsByTagName</span>(<span class="string">&#x27;tagName&#x27;</span>);</span><br></pre></td></tr></table></figure>
<p>获取元素集合，以伪数组形式存储。</p>
<h3 id="（三）、通过新增方法获取">（三）、通过新增方法获取</h3>
<ol>
<li class="lvl-3">
<h4 id="获取单个">获取单个</h4>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> el = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;选择器&#x27;</span>);  <span class="comment">//根据选择器返回第一个元素对象</span></span><br></pre></td></tr></table></figure>
<blockquote>
<p>需要加前缀符号如：. # 等。</p>
</blockquote>

    <div class="demobox">
      <div class="demobox-result">
  <div class="demo2">&#x8FD9;&#x662F;div-demo2-1&#x5185;&#x7684;&#x5185;&#x5BB9;</div>
  <div class="demo2">div-demo2-2</div>
  <button class="demo2-btn">&#x70B9;&#x51FB;&#x66FF;&#x6362;&#x5185;&#x5BB9;</button>
<script>(function(){
  var el = document.querySelector('.demo2');
  $(document).ready(function(){
  $(".demo2-btn").click(function(){
    el.innerHTML="替换后的内容";
  });
});
})();</script><style></style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">querySelector</div><div class="demobox-intro"><p>&#x901A;&#x8FC7;getElementById&#x83B7;&#x53D6;&#x5355;&#x4E2A;&#x5143;&#x7D20;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo2&quot;</span>&gt;</span>&#x8FD9;&#x662F;div-demo2-1&#x5185;&#x7684;&#x5185;&#x5BB9;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo2&quot;</span>&gt;</span>div-demo2-2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;demo2-btn&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x66FF;&#x6362;&#x5185;&#x5BB9;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> el = <span class="built_in">document</span>.querySelector(<span class="string">&apos;.demo2&apos;</span>);</span><br><span class="line">  $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  $(<span class="string">&quot;.demo2-btn&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">    el.innerHTML=<span class="string">&quot;&#x66FF;&#x6362;&#x540E;&#x7684;&#x5185;&#x5BB9;&quot;</span>;</span><br><span class="line">  });</span><br><span class="line">});</span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div></div></div>
  
<ol start="2">
<li class="lvl-3">
<h4 id="获取多个">获取多个</h4>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> el = <span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&#x27;选择器&#x27;</span>);  <span class="comment">//返回指定选择器所有元素对象集合</span></span><br></pre></td></tr></table></figure>

    <div class="demobox">
      <div class="demobox-result">
  <div class="demo3">&#x8FD9;&#x662F;div-demo3-1&#x5185;&#x7684;&#x5185;&#x5BB9;</div>
  <div class="demo3">&#x8FD9;&#x662F;div-demo3-2&#x5185;&#x7684;&#x5185;&#x5BB9;</div>
  <div class="demo3">&#x8FD9;&#x662F;div-demo3-3&#x5185;&#x7684;&#x5185;&#x5BB9;</div>
  <div class="demo3">&#x8FD9;&#x662F;div-demo3-4&#x5185;&#x7684;&#x5185;&#x5BB9;</div>
  <button class="demo3-btn">&#x70B9;&#x51FB;&#x66FF;&#x6362;&#x5185;&#x5BB9;</button>
<script>(function(){
  var el = document.querySelectorAll('.demo3');
  $(document).ready(function(){
  $(".demo3-btn").click(function(){
    for(let i=0 ;i<el.length;i++){
      el[i].innerHTML='内容被改变了';
    }
  });
});
})();</script><style></style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">querySelectorAll</div><div class="demobox-intro"><p>&#x901A;&#x8FC7;querySelectorAll&#x83B7;&#x53D6;&#x5143;&#x7D20;&#x96C6;&#x5408;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo3&quot;</span>&gt;</span>&#x8FD9;&#x662F;div-demo3-1&#x5185;&#x7684;&#x5185;&#x5BB9;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo3&quot;</span>&gt;</span>&#x8FD9;&#x662F;div-demo3-2&#x5185;&#x7684;&#x5185;&#x5BB9;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo3&quot;</span>&gt;</span>&#x8FD9;&#x662F;div-demo3-3&#x5185;&#x7684;&#x5185;&#x5BB9;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo3&quot;</span>&gt;</span>&#x8FD9;&#x662F;div-demo3-4&#x5185;&#x7684;&#x5185;&#x5BB9;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;demo3-btn&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x66FF;&#x6362;&#x5185;&#x5BB9;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> el = <span class="built_in">document</span>.querySelectorAll(<span class="string">&apos;.demo3&apos;</span>);</span><br><span class="line">  $(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  $(<span class="string">&quot;.demo3-btn&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">let</span> i=<span class="number">0</span> ;i&lt;el.length;i++){</span><br><span class="line">      el[i].innerHTML=<span class="string">&apos;&#x5185;&#x5BB9;&#x88AB;&#x6539;&#x53D8;&#x4E86;&apos;</span>;</span><br><span class="line">    }</span><br><span class="line">  });</span><br><span class="line">});</span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div></div></div>
  
<ol start="3">
<li class="lvl-3">
<h4 id="获取body与html">获取body与html</h4>
</li>
</ol>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> htmlEl = <span class="variable language_">document</span>.<span class="property">documentElement</span>; <span class="comment">//获取html标签元素</span></span><br><span class="line"><span class="keyword">var</span> bodyEl = <span class="variable language_">document</span>.<span class="property">body</span>;</span><br></pre></td></tr></table></figure>
<h2 id="二、事件">二、事件</h2>
<p>事件三要素：事件源、事件类型、事件处理程序。</p>
<h3 id="（一）、事件源">（一）、事件源</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> btn = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&#x27;button&#x27;</span>);  <span class="comment">//事件源</span></span><br></pre></td></tr></table></figure>
<h3 id="（二）、事件类型">（二）、事件类型</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> ev = btn.<span class="property">onclick</span></span><br></pre></td></tr></table></figure>
<p>更多事件类型可以看<a href="https://www.w3school.com.cn/jsref/dom_obj_event.asp">W3 school HTML DOM 事件</a></p>
<h3 id="（三）、事件处理程序">（三）、事件处理程序</h3>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">ev = <span class="keyword">function</span>(<span class="params"></span>)&#123;</span><br><span class="line">    <span class="title function_">alert</span>(<span class="string">&#x27;弹出对话框&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

    <div class="demobox">
      <div class="demobox-result">
  <button class="demo4-btn">&#x70B9;&#x51FB;&#x5F39;&#x51FA;&#x5BF9;&#x8BDD;&#x6846;</button>
<script>(function(){
  var el = document.querySelector('.demo4-btn');  //事件源
  el.onclick = function(){
    alert('弹出对话框');
  }
})();</script><style></style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">&#x4E8B;&#x4EF6;</div><div class="demobox-intro"><p>js&#x70B9;&#x51FB;&#x4E8B;&#x4EF6;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;demo4-btn&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x5F39;&#x51FA;&#x5BF9;&#x8BDD;&#x6846;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> el = <span class="built_in">document</span>.querySelector(<span class="string">&apos;.demo4-btn&apos;</span>);  <span class="comment">//&#x4E8B;&#x4EF6;&#x6E90;</span></span><br><span class="line">el.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  alert(<span class="string">&apos;&#x5F39;&#x51FA;&#x5BF9;&#x8BDD;&#x6846;&apos;</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div></div></div>
  
<h3 id="（四）、执行事件的步骤">（四）、执行事件的步骤</h3>
<ol>
<li class="lvl-3">
<p>获取事件源 <code>var el = document.querySelector('div')</code></p>
</li>
<li class="lvl-3">
<p>绑定事件 <code>el.onclick</code></p>
</li>
<li class="lvl-3">
<p>添加事件处理程序 <code>el.onclick = function ()&#123; alert('选中'); &#125;</code></p>
</li>
</ol>
<h2 id="三、元素修改">三、元素修改</h2>
<h3 id="（一）、修改元素内容">（一）、修改元素内容</h3>

    <div class="demobox">
      <div class="demobox-result">
<div class="demo5">div&#x5185;&#x7684;&#x5185;&#x5BB9;</div>
<button class="demo5-btn">&#x70B9;&#x51FB;&#x4FEE;&#x6539;div&#x5185;&#x5BB9;</button>
<script>(function(){
let div = document.querySelector('.demo5');
let el = document.querySelector('.demo5-btn');  
el.onclick = function(){
  div.innerText = '修改后的内容';
}
})();</script><style></style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">&#x4E8B;&#x4EF6;&#x4FEE;&#x6539;&#x5143;&#x7D20;&#x5185;&#x5BB9;</div><div class="demobox-intro"><p>&#x4FEE;&#x6539;&#x5143;&#x7D20;&#x5185;&#x5BB9;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo5&quot;</span>&gt;</span>div&#x5185;&#x7684;&#x5185;&#x5BB9;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;demo5-btn&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x4FEE;&#x6539;div&#x5185;&#x5BB9;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> div = <span class="built_in">document</span>.querySelector(<span class="string">&apos;.demo5&apos;</span>);</span><br><span class="line"><span class="keyword">let</span> el = <span class="built_in">document</span>.querySelector(<span class="string">&apos;.demo5-btn&apos;</span>);  </span><br><span class="line">el.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  div.innerText = <span class="string">&apos;&#x4FEE;&#x6539;&#x540E;&#x7684;&#x5185;&#x5BB9;&apos;</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div></div></div>
  
<blockquote>
<p>innerText 与 innerHTML 的区别：innerHTML 可以识别 html 标签符合 W3C 标准。而 innerText 是单纯的文本。</p>
</blockquote>
<h3 id="（二）、修改元素属性">（二）、修改元素属性</h3>

    <div class="demobox">
      <div class="demobox-result">
<input class="demo6" type="text" value="&#x73B0;&#x5728;&#x662F;&#x53EF;&#x89C1;&#x7684;&#x5185;&#x5BB9;">
<button class="demo6-btn">&#x70B9;&#x51FB;&#x8BA9;&#x8F93;&#x5165;&#x6846;&#x5185;&#x5BB9;&#x4E0D;&#x53EF;&#x89C1;</button>
<script>(function(){
let text = document.querySelector('.demo6');
let el = document.querySelector('.demo6-btn');  
el.onclick = function(){
  el.innerHTML= (el.innerHTML == "点击让输入框内容可见"?"点击让输入框内容不可见":"点击让输入框内容可见");
  text.type = (text.type == "password" ? "text":"password");
}
})();</script><style></style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">&#x4FEE;&#x6539;&#x5143;&#x7D20;&#x5C5E;&#x6027;</div><div class="demobox-intro"><p>&#x70B9;&#x51FB;&#x4FEE;&#x6539;&#x5143;&#x7D20;&#x5C5E;&#x6027;</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">&quot;demo6&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;&#x73B0;&#x5728;&#x662F;&#x53EF;&#x89C1;&#x7684;&#x5185;&#x5BB9;&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;demo6-btn&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x8BA9;&#x8F93;&#x5165;&#x6846;&#x5185;&#x5BB9;&#x4E0D;&#x53EF;&#x89C1;<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> text = <span class="built_in">document</span>.querySelector(<span class="string">&apos;.demo6&apos;</span>);</span><br><span class="line"><span class="keyword">let</span> el = <span class="built_in">document</span>.querySelector(<span class="string">&apos;.demo6-btn&apos;</span>);  </span><br><span class="line">el.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  el.innerHTML= (el.innerHTML == <span class="string">&quot;&#x70B9;&#x51FB;&#x8BA9;&#x8F93;&#x5165;&#x6846;&#x5185;&#x5BB9;&#x53EF;&#x89C1;&quot;</span>?<span class="string">&quot;&#x70B9;&#x51FB;&#x8BA9;&#x8F93;&#x5165;&#x6846;&#x5185;&#x5BB9;&#x4E0D;&#x53EF;&#x89C1;&quot;</span>:<span class="string">&quot;&#x70B9;&#x51FB;&#x8BA9;&#x8F93;&#x5165;&#x6846;&#x5185;&#x5BB9;&#x53EF;&#x89C1;&quot;</span>);</span><br><span class="line">  text.type = (text.type == <span class="string">&quot;password&quot;</span> ? <span class="string">&quot;text&quot;</span>:<span class="string">&quot;password&quot;</span>);</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure></div></div></div>
  
<h3 id="（三）、使用className修改样式">（三）、使用className修改样式</h3>

    <div class="demobox">
      <div class="demobox-result">
<div id="demo7">&#x4FEE;&#x6539;&#x6837;&#x5F0F;&#x524D;</div>
<button class="demo7-btn">&#x70B9;&#x51FB;&#x6DFB;&#x52A0;&#x7ED9;div&#x6DFB;&#x52A0;class</button>
<script>(function(){
let text = document.querySelector('#demo7');
let el = document.querySelector('.demo7-btn');  
el.onclick = function(){
  this.innerHTML = '已添加';
  text.className = 'needstyle';
  text.innerHTML='修改样式后';
}
})();</script><style>
.needstyle{
  color: red;
}
</style></div>
    <div class="demobox-meta"><span class="demobox-meta-collapse" onclick="jQuery(this).parents(&apos;.demobox&apos;).toggleClass(&apos;demobox-expand&apos;)"></span><div class="demobox-name">className&#x4FEE;&#x6539;&#x6837;&#x5F0F;</div><div class="demobox-intro"><p>&#x70B9;&#x51FB;&#x4FEE;&#x6539;className</p>
</div></div><div class="demobox-code-wrap"><div class="demobox-code demobox-html"><figure class="highlight html"><figcaption><span>html</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo7&quot;</span>&gt;</span>&#x4FEE;&#x6539;&#x6837;&#x5F0F;&#x524D;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> <span class="attr">class</span>=<span class="string">&quot;demo7-btn&quot;</span>&gt;</span>&#x70B9;&#x51FB;&#x6DFB;&#x52A0;&#x7ED9;div&#x6DFB;&#x52A0;class<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-script"><figure class="highlight javascript"><figcaption><span>javascript</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> text = <span class="built_in">document</span>.querySelector(<span class="string">&apos;#demo7&apos;</span>);</span><br><span class="line"><span class="keyword">let</span> el = <span class="built_in">document</span>.querySelector(<span class="string">&apos;.demo7-btn&apos;</span>);  </span><br><span class="line">el.onclick = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>{</span><br><span class="line">  <span class="keyword">this</span>.innerHTML = <span class="string">&apos;&#x5DF2;&#x6DFB;&#x52A0;&apos;</span>;</span><br><span class="line">  text.className = <span class="string">&apos;needstyle&apos;</span>;</span><br><span class="line">  text.innerHTML=<span class="string">&apos;&#x4FEE;&#x6539;&#x6837;&#x5F0F;&#x540E;&apos;</span>;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div><div class="demobox-code demobox-style"><figure class="highlight css"><figcaption><span>css</span></figcaption><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.needstyle</span>{</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">}</span><br></pre></td></tr></table></figure></div></div></div>
  
<h3 id="（四）、获取自定义属性">（四）、获取自定义属性</h3>
<blockquote>
<p>自定义属性可通过<code>getAttribute()</code>获取。</p>
<p>通用属性可通过<code>element.属性</code>获取。</p>
</blockquote>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">&lt;div id = <span class="string">&quot;test&quot;</span> index = <span class="string">&#x27;1&#x27;</span>&gt;&lt;div&gt;</span><br><span class="line"><span class="keyword">var</span> div = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;div&#x27;</span>);</span><br><span class="line">div.<span class="title function_">getAttribute</span>(<span class="string">&#x27;id&#x27;</span>);</span><br><span class="line">div.<span class="title function_">getAttribute</span>(<span class="string">&#x27;index&#x27;</span>);</span><br></pre></td></tr></table></figure>
<h2 id="四、节点操作">四、节点操作</h2>
<h3 id="（一）、节点概述">（一）、节点概述</h3>
<p>节点至少拥有nodeType（节点类型）、nodeName（节点名称）、nideValue（节点值）三个基本属性。</p>
<h4 id="1-节点层级">  1.节点层级</h4>
<h5 id="a-父节点">   a.父节点</h5>
<p> <code>node.parentNode</code>得到离本元素最近的父亲节点，没有则为null。</p>
<h5 id="b-子节点">   b.子节点</h5>
<p> <code>parentNode.childNodes</code>得到<strong>子节点</strong>集合，同时包含元素节点与文本节点。（标准写法）</p>
<p> <code>parentNode.children</code>得到所有<strong>子元素节点</strong>。（非标准，但使用多）</p>
<p> <code>parentNode.firstChild</code>得到第一个<strong>子节点</strong>。</p>
<p> <code>parentNode.firstElementChild</code>得到第一个<strong>子元素节点</strong>。</p>
<h5 id="c-兄弟节点">   c.兄弟节点</h5>
<p> <code>el.nextSibling</code>得到下一个<strong>兄弟节点</strong>包含元素节点与文本节点。</p>
<p> <code>el.previousSibling</code>得到下一个<strong>兄弟节点</strong>包含元素节点与文本节点。</p>
<p> <code>el.nextElementSibling</code>得到下一个<strong>兄弟元素节点</strong>。</p>
<p> <code>el.previousElementSibling</code>得到下一个<strong>兄弟元素节点</strong>。</p>
<h4 id="2-创建节点与添加节点">  2.创建节点与添加节点</h4>
<figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">//1. 创建节点元素节点</span></span><br><span class="line"><span class="keyword">var</span> li = <span class="variable language_">document</span>.<span class="title function_">createElement</span>(<span class="string">&#x27;li&#x27;</span>);</span><br><span class="line"><span class="comment">//2. 添加节点到父级</span></span><br><span class="line"><span class="keyword">var</span> ul = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;ul&#x27;</span>);</span><br><span class="line">ul.<span class="title function_">appendChild</span>(li);</span><br><span class="line"><span class="comment">//3.添加节点</span></span><br></pre></td></tr></table></figure>
<!-- source-text -->
]]></content>
      <categories>
        <category>web前端-js</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>前端</tag>
        <tag>笔记</tag>
        <tag>html</tag>
        <tag>javascript</tag>
      </tags>
  </entry>
  <entry>
    <title>为hexo文章添加关键字</title>
    <url>/add-keywords-to-hexo-articles/</url>
    <content><![CDATA[<p>我使用的是next主题，要修改的文件是/hexo/themes/next/layout/_partials/head/head-unique.njk</p>
<span id="more"></span>
<p><img data-src="https://qiniu.itechfans.com/blogImage/image-20220630112036844.png?imageMogr2/auto-orient/thumbnail/x200/interlace/1/blur/1x0/quality/49%7Cwatermark/2/text/aXRlY2hmYW5zLmNvbQ==/font/5b6u6L2v6ZuF6buR/fontsize/280/fill/IzhFOEU4RQ==/dissolve/74/gravity/SouthEast/dx/10/dy/10" alt="image-20220630112036844"></p>
<p>在顶部添加</p>
<figure class="highlight django"><table><tr><td class="code"><pre><span class="line"><span class="template-tag">&#123;%- <span class="name"><span class="name">if</span></span> page.keywords %&#125;</span><span class="language-xml"></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;keywords&quot;</span> <span class="attr">content</span>=<span class="string">&quot;</span></span></span><span class="template-variable">&#123;&#123; page.keywords &#125;&#125;</span><span class="language-xml"><span class="tag"><span class="string">&quot;</span> /&gt;</span></span></span><br><span class="line"><span class="language-xml"></span><span class="template-tag">&#123;%- <span class="name"><span class="name">endif</span></span> %&#125;</span></span><br></pre></td></tr></table></figure>
<p>然后 hexo clean &amp;&amp; hexo g -d 重新部署一下</p>
<p><img data-src="https://qiniu.itechfans.com/blogImage/image-20220630112248314.png?imageMogr2/auto-orient/thumbnail/x200/interlace/1/blur/1x0/quality/49%7Cwatermark/2/text/aXRlY2hmYW5zLmNvbQ==/font/5b6u6L2v6ZuF6buR/fontsize/280/fill/IzhFOEU4RQ==/dissolve/74/gravity/SouthEast/dx/10/dy/10" alt="image-20220630112248314"></p>
<p>就可以看见关键词了</p>
<!-- source-text -->]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>教程</tag>
        <tag>技巧</tag>
        <tag>seo</tag>
      </tags>
  </entry>
</search>
